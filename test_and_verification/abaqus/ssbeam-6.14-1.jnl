# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=20.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-4.0, 0.0), point2=(
    0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    -3.38445258140564, -1.64137983322144), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseWire(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Material-1')
mdb.models['Model-1'].materials['Material-1'].Density(table=((7850.0, ), ))
mdb.models['Model-1'].materials['Material-1'].Elastic(table=((210000000000.0, 
    0.3), ))
mdb.models['Model-1'].BoxProfile(a=0.4, b=0.4, name='Profile-1', t1=0.04, 
    uniformThickness=ON)
mdb.models['Model-1'].BeamSection(consistentMassMatrix=False, integration=
    DURING_ANALYSIS, material='Material-1', name='Section-1', poissonRatio=0.0, 
    profile='Profile-1', temperatureVar=LINEAR)
mdb.models['Model-1'].parts['Part-1'].Set(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-1'], sectionName=
    'Section-1', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Part-1'].Set(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-2')
mdb.models['Model-1'].parts['Part-1'].assignBeamSectionOrientation(method=
    N1_COSINES, n1=(0.0, 0.0, -1.0), region=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-2'])
mdb.models['Model-1'].parts['Part-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.1)
mdb.models['Model-1'].parts['Part-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.5)
mdb.models['Model-1'].parts['Part-1'].generateMesh()
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].parts['Part-1'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-1'].PartitionEdgeByParam(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#1 ]', 
    ), ), parameter=0.3)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.Set(name='Set-1', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    ('[#7 ]', ), ))
mdb.models['Model-1'].PinnedBC(createStepName='Initial', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-1'])
mdb.models['Model-1'].StaticLinearPerturbationStep(name='Step-1', previous=
    'Initial')
del mdb.models['Model-1'].steps['Step-1']
mdb.models['Model-1'].FrequencyStep(name='Step-1', numEigen=20, previous=
    'Initial')
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs.changeKey(fromName='Job-1', toName='ssbeam')
mdb.jobs['ssbeam'].submit(consistencyChecking=OFF)
mdb.jobs['ssbeam']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 0, 'jobName': 'ssbeam'})
mdb.models['Model-1'].parts['Part-1'].generateMesh()
mdb.jobs['ssbeam']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "ssbeam.inp", line 32: Unknown assembly node set SET-1', 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THIS MODEL HAS EITHER INCORRECT OR NO ELEMENT DEFINITIONS.', 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'ssbeam'})
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['ssbeam'].submit(consistencyChecking=OFF)
mdb.jobs['ssbeam']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Work\\Pres\\2017-06-29\\labbeam\\abaqus\\ssbeam.odb', 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 476, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ssbeam', 'memory': 25.0})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'ssbeam'})
mdb.models['Model-1'].steps['Step-1'].setValues(normalization=MASS)
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(JOB_COMPLETED, {'time': 'Mon Jun 26 16:26:57 2017', 
    'jobName': 'ssbeam'})
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    ('[#3 ]', ), ), name='Set-2', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    ('[#3 ]', ), ))
mdb.models['Model-1'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-2'])
del mdb.models['Model-1'].boundaryConditions['BC-2']
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    ('[#3 ]', ), ), name='Set-3', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    ('[#2 ]', ), ))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-2', 
    region=mdb.models['Model-1'].rootAssembly.sets['Set-3'], u1=UNSET, u2=UNSET
    , u3=SET, ur1=SET, ur2=UNSET, ur3=UNSET)
mdb.jobs['ssbeam'].submit(consistencyChecking=OFF)
mdb.jobs['ssbeam']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Work\\Pres\\2017-06-29\\labbeam\\abaqus\\ssbeam.odb', 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 5308, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ssbeam', 'memory': 25.0})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(JOB_COMPLETED, {'time': 'Mon Jun 26 16:28:51 2017', 
    'jobName': 'ssbeam'})
mdb.models['Model-1'].steps['Step-1'].setValues(numEigen=10)
mdb.jobs['ssbeam'].submit(consistencyChecking=OFF)
mdb.jobs['ssbeam']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Work\\Pres\\2017-06-29\\labbeam\\abaqus\\ssbeam.odb', 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 9224, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ssbeam', 'memory': 25.0})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(JOB_COMPLETED, {'time': 'Mon Jun 26 16:31:26 2017', 
    'jobName': 'ssbeam'})
# Save by oyvinpet on 2017_06_26-16.46.10; build 6.14-1 2014_06_05-00.11.02 134264
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='ssbeam_err', nodalOutputPrecision=SINGLE
    , numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.models['Model-1'].materials['Material-1'].density.setValues(table=((7800.0, 
    ), ))
mdb.models['Model-1'].materials['Material-1'].elastic.setValues(table=((
    200000000000.0, 0.3), ))
mdb.jobs['ssbeam_err'].submit(consistencyChecking=OFF)
mdb.jobs['ssbeam_err']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 0, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Work\\Pres\\2017-06-29\\labbeam\\abaqus\\ssbeam_err.odb', 
    'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 6940, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ssbeam_err', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['ssbeam_err']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ssbeam_err', 'memory': 25.0})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'ssbeam_err', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['ssbeam_err']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam_err'})
mdb.jobs['ssbeam_err']._Message(JOB_COMPLETED, {
    'time': 'Mon Jun 26 16:47:30 2017', 'jobName': 'ssbeam_err'})
# Save by oyvinpet on 2017_06_27-09.45.22; build 6.14-1 2014_06_05-00.11.02 134264
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Part-1'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#3 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-1'].PartitionEdgeByParam(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#3 ]', 
    ), ), parameter=0.5)
mdb.models['Model-1'].parts['Part-1'].PartitionEdgeByParam(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#4 ]', 
    ), ), parameter=0.3)
mdb.models['Model-1'].parts['Part-1'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    ('[#1f ]', ), ), name='Set-4', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    ('[#3f ]', ), ))
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-4'])
mdb.models['Model-1'].rootAssembly.engineeringFeatures.SpringDashpotToGround(
    dashpotBehavior=OFF, dashpotCoefficient=0.0, dof=2, name=
    'Springs/Dashpots-1', orientation=None, region=Region(
    vertices=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    mask=('[#1a ]', ), )), springBehavior=ON, springStiffness=100.0)
mdb.models['Model-1'].steps['Step-1'].setValues(numEigen=30)
mdb.jobs['ssbeam'].submit(consistencyChecking=OFF)
mdb.jobs['ssbeam']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Work\\Hardanger\\Forceid\\smoothing\\ssbeam_test\\abaqus\\ssbeam.odb', 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 9516, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ssbeam', 'memory': 25.0})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(JOB_COMPLETED, {'time': 'Fri Aug 11 13:23:19 2017', 
    'jobName': 'ssbeam'})
mdb.models['Model-1'].boundaryConditions['BC-2'].setValuesInStep(stepName=
    'Step-1', u1=0.0)
mdb.jobs['ssbeam'].submit(consistencyChecking=OFF)
mdb.jobs['ssbeam']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Work\\Hardanger\\Forceid\\smoothing\\ssbeam_test\\abaqus\\ssbeam.odb', 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'NTNU04286', 'handle': 1124, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ssbeam', 'memory': 25.0})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'ssbeam', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['ssbeam']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ssbeam'})
mdb.jobs['ssbeam']._Message(JOB_COMPLETED, {'time': 'Fri Aug 11 13:25:15 2017', 
    'jobName': 'ssbeam'})
# Save by oyvinpet on 2017_08_11-13.30.59; build 6.14-1 2014_06_05-00.11.02 134264
